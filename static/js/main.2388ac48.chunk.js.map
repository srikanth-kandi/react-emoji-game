{"version":3,"sources":["components/NavBar/index.js","components/EmojiCard/index.js","components/WinOrLoseCard/index.js","components/EmojiGame/index.js","App.js","index.js"],"names":["NavBar","props","gameScores","score","topScore","gameCompleted","_jsxs","className","children","_jsx","src","alt","EmojiCard","emojiDetails","updateEmojiId","id","emojiName","emojiUrl","onClick","type","WinOrLoseCard","gameDetails","restartGame","won","resultImageUrl","resultText","scoreHeading","_Fragment","EmojiGame","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","emojisClickedIds","shuffledEmojisList","emojisList","sort","Math","random","includes","setState","prevState","_toConsumableArray","_createClass","key","value","_this2","_this$state","this","WinOrLooseCard","map","eachEmoji","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2388ac48.chunk.js","sourcesContent":["import './index.css'\n\nconst NavBar = props => {\n  const {gameScores} = props\n  const {score, topScore, gameCompleted} = gameScores\n  // console.log(gameScores)\n  return (\n    <nav className=\"nav-bar\">\n      <div className=\"game-logo-name-container\">\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/game-logo-img.png\"\n          alt=\"emoji logo\"\n          className=\"game-logo\"\n        />\n        <h1 className=\"game-logo-name\">Emoji Game</h1>\n      </div>\n      {gameCompleted ? null : (\n        <div className=\"score-and-top-score-container\">\n          <p className=\"score-indicator\">Score: {score}</p>\n          <p className=\"total-score-indicator\">Top Score: {topScore}</p>\n        </div>\n      )}\n    </nav>\n  )\n}\n\nexport default NavBar\n","import './index.css'\n\nconst EmojiCard = props => {\n  const {emojiDetails, updateEmojiId} = props\n  const {id, emojiName, emojiUrl} = emojiDetails\n  const onEmojiClick = () => updateEmojiId(id)\n\n  return (\n    <li onClick={onEmojiClick} className=\"emoji-card\">\n      <button type=\"button\" className=\"emoji-button\">\n        <img className=\"emoji\" src={emojiUrl} alt={emojiName} />\n      </button>\n    </li>\n  )\n}\n\nexport default EmojiCard\n","import './index.css'\n\nconst WinOrLoseCard = props => {\n  const {gameDetails, restartGame} = props\n  const {score, won} = gameDetails\n\n  const resultImageUrl = won\n    ? 'https://assets.ccbp.in/frontend/react-js/won-game-img.png'\n    : 'https://assets.ccbp.in/frontend/react-js/lose-game-img.png'\n\n  const resultText = won ? 'You Won' : 'You Lose'\n  const scoreHeading = won ? 'Best Score' : 'Score'\n\n  return (\n    <>\n      <div className=\"result-score-button-container\">\n        <h1 className=\"result-text\">{resultText}</h1>\n        <div className=\"score-button-container\">\n          <p className=\"score-text\">{scoreHeading}</p>\n          <p className=\"score-count\">{score}/12</p>\n          <button\n            onClick={restartGame}\n            type=\"button\"\n            className=\"play-again-button\"\n          >\n            Play Again\n          </button>\n        </div>\n      </div>\n      <img className=\"result-image\" src={resultImageUrl} alt=\"win or lose\" />\n    </>\n  )\n}\n\nexport default WinOrLoseCard\n","import {Component} from 'react'\nimport NavBar from '../NavBar'\nimport EmojiCard from '../EmojiCard'\nimport WinOrLooseCard from '../WinOrLoseCard'\nimport './index.css'\n\n/* \nQuick Tip \n\n- Use the below function in the EmojiGame Component to shuffle the emojisList every time when an emoji is clicked.\n\nconst shuffledEmojisList = () => {\n  const {emojisList} = this.props\n  return emojisList.sort(() => Math.random() - 0.5)\n}\n\n*/\n\n// Write your code here.\n\nexport default class EmojiGame extends Component {\n  state = {\n    score: 0,\n    topScore: 0,\n    gameCompleted: false,\n    won: false,\n    emojisClickedIds: [],\n  }\n\n  shuffledEmojisList = () => {\n    const {emojisList} = this.props\n    return emojisList.sort(() => Math.random() - 0.5)\n  }\n\n  updateEmojiId = id => {\n    const {emojisClickedIds} = this.state\n    if (emojisClickedIds.includes(id)) {\n      this.setState(prevState => ({\n        topScore:\n          prevState.score > prevState.topScore\n            ? prevState.score\n            : prevState.topScore,\n        gameCompleted: true,\n      }))\n    } else if (!emojisClickedIds.includes(id) && emojisClickedIds.length < 11) {\n      this.setState(prevState => ({\n        emojisClickedIds: [...prevState.emojisClickedIds, id],\n        score: prevState.score + 1,\n      }))\n    } else {\n      this.setState(prevState => ({\n        emojisClickedIds: [...prevState.emojisClickedIds, id],\n        score: prevState.score + 1,\n        gameCompleted: true,\n        won: true,\n        topScore: 12,\n      }))\n    }\n  }\n\n  restartGame = () =>\n    this.setState({\n      gameCompleted: false,\n      won: false,\n      emojisClickedIds: [],\n      score: 0,\n    })\n\n  render() {\n    const {gameCompleted, won, score, topScore} = this.state\n    const shuffledEmojisList = this.shuffledEmojisList()\n    return (\n      <div className=\"home-container\">\n        <NavBar gameScores={{score, topScore, gameCompleted}} />\n        <div className=\"bottom-container\">\n          {gameCompleted ? (\n            <div className=\"win-lose-container\">\n              <WinOrLooseCard\n                restartGame={this.restartGame}\n                gameDetails={{won, score}}\n              />\n            </div>\n          ) : (\n            <>\n              <p className=\"rule\">Game rule: Do not select an emoji twice !!</p>\n              <ul className=\"emojis-container\">\n                {shuffledEmojisList.map(eachEmoji => (\n                  <EmojiCard\n                    updateEmojiId={this.updateEmojiId}\n                    emojiDetails={eachEmoji}\n                    key={eachEmoji.id}\n                  />\n                ))}\n              </ul>\n            </>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n","import EmojiGame from './components/EmojiGame'\n\nimport './App.css'\n\nconst emojisList = [\n  {\n    id: 0,\n    emojiName: 'Face with stuck out tongue',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-img.png',\n  },\n  {\n    id: 1,\n    emojiName: 'Face with head bandage',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-head-bandage-img.png',\n  },\n  {\n    id: 2,\n    emojiName: 'Face with hugs',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-hugs-img.png',\n  },\n  {\n    id: 3,\n    emojiName: 'Face with laughing',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-img.png',\n  },\n  {\n    id: 4,\n    emojiName: 'Laughing face with hand in front of mouth',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-laughing-with-hand-infront-mouth-img.png',\n  },\n  {\n    id: 5,\n    emojiName: 'Face with mask',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/face-with-mask-img.png',\n  },\n  {\n    id: 6,\n    emojiName: 'Face with silence',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-silence-img.png',\n  },\n  {\n    id: 7,\n    emojiName: 'Face with stuck out tongue and winked eye',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/face-with-stuck-out-tongue-and-winking-eye-img.png',\n  },\n  {\n    id: 8,\n    emojiName: 'Grinning face with sweat',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/grinning-face-with-sweat-img.png',\n  },\n  {\n    id: 9,\n    emojiName: 'Smiling face with heart eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-heart-eyes-img.png',\n  },\n  {\n    id: 10,\n    emojiName: 'Grinning face',\n    emojiUrl: 'https://assets.ccbp.in/frontend/react-js/grinning-face-img.png',\n  },\n  {\n    id: 11,\n    emojiName: 'Smiling face with star eyes',\n    emojiUrl:\n      'https://assets.ccbp.in/frontend/react-js/smiling-face-with-star-eyes-img.png',\n  },\n]\n\nconst App = () => <EmojiGame emojisList={emojisList} />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}